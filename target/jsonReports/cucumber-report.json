[
  {
    "line": 1,
    "elements": [
      {
        "start_timestamp": "2020-11-22T10:58:23.593Z",
        "before": [
          {
            "result": {
              "error_message": "io.restassured.path.json.exception.JsonPathException: Failed to parse the JSON document\r\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1002)\r\n\tat io.restassured.path.json.JsonPath$4.doParseWith(JsonPath.java:967)\r\n\tat io.restassured.path.json.JsonPath$JsonParser.parseWith(JsonPath.java:1047)\r\n\tat io.restassured.path.json.JsonPath.get(JsonPath.java:202)\r\n\tat io.restassured.path.json.JsonPath.getString(JsonPath.java:352)\r\n\tat resources.Utils.getJsonPath(Utils.java:51)\r\n\tat stepDefinition.stepDefinition.verify_place_Id_created_maps_to_using(stepDefinition.java:86)\r\n\tat stepDefinition.Hooks.BeforedeletePlaceScenario(Hooks.java:19)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:26)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:20)\r\n\tat cucumber.runtime.java.JavaHookDefinition.execute(JavaHookDefinition.java:65)\r\n\tat cucumber.runner.HookDefinitionMatch.runStep(HookDefinitionMatch.java:16)\r\n\tat cucumber.runner.TestStep.executeStep(TestStep.java:65)\r\n\tat cucumber.runner.TestStep.run(TestStep.java:50)\r\n\tat cucumber.runner.TestCase.run(TestCase.java:42)\r\n\tat cucumber.runner.Runner.runPickle(Runner.java:50)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:146)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:68)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:23)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:144)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:65)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:174)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:89)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:41)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:542)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:770)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:464)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)\r\nCaused by: groovy.json.JsonException: Lexing failed on line: 1, column: 1, while reading \u0027\u003c\u0027, no possible valid JSON value or punctuation could be recognized.\r\n\tat groovy.json.JsonLexer.nextToken(JsonLexer.java:86)\r\n\tat groovy.json.JsonLexer$nextToken.call(Unknown Source)\r\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parse(ConfigurableJsonSlurper.groovy:97)\r\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper$parse.callCurrent(Unknown Source)\r\n\tat io.restassured.internal.path.json.ConfigurableJsonSlurper.parseText(ConfigurableJsonSlurper.groovy:83)\r\n\tat io.restassured.path.json.JsonPath$4$1.method(JsonPath.java:965)\r\n\tat io.restassured.path.json.JsonPath$ExceptionCatcher.invoke(JsonPath.java:1000)\r\n\t... 44 more\r\n",
              "duration": 4896736100,
              "status": "failed"
            },
            "match": {
              "location": "Hooks.BeforedeletePlaceScenario()"
            }
          }
        ],
        "line": 12,
        "name": ": verify if place is being succesfully added using AddPlaceAPI",
        "description": "",
        "id": "validating-place-api-s;:-verify-if-place-is-being-succesfully-added-using-addplaceapi;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 321300,
              "status": "skipped"
            },
            "line": 5,
            "name": "Add Place Payload with \"asas\" \"dhjashd\" \"jsdkhsk\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asas\"",
                  "offset": 23
                },
                {
                  "val": "\"dhjashd\"",
                  "offset": 30
                },
                {
                  "val": "\"jsdkhsk\"",
                  "offset": 40
                }
              ],
              "location": "stepDefinition.add_Place_Payload_with(String,String,String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15300,
              "status": "skipped"
            },
            "line": 6,
            "name": "user calls \"AddPlaceAPI\" with \"Post\" http request",
            "match": {
              "arguments": [
                {
                  "val": "\"AddPlaceAPI\"",
                  "offset": 11
                },
                {
                  "val": "\"Post\"",
                  "offset": 30
                }
              ],
              "location": "stepDefinition.user_calls_with_http_request(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11500,
              "status": "skipped"
            },
            "line": 7,
            "name": "the API call is success with status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 41
                }
              ],
              "location": "stepDefinition.the_API_call_is_success_with_status_code(Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8500,
              "status": "skipped"
            },
            "line": 8,
            "name": "\"status\" in response body is \"ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"status\"",
                  "offset": 0
                },
                {
                  "val": "\"ok\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinition.in_response_body_is(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7600,
              "status": "skipped"
            },
            "line": 9,
            "name": "verify place_Id created maps to \"asas\" using \"getPlaceAPI\"",
            "match": {
              "arguments": [
                {
                  "val": "\"asas\"",
                  "offset": 32
                },
                {
                  "val": "\"getPlaceAPI\"",
                  "offset": 45
                }
              ],
              "location": "stepDefinition.verify_place_Id_created_maps_to_using(String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@AddPlace"
          }
        ]
      },
      {
        "start_timestamp": "2020-11-22T10:58:28.558Z",
        "before": [
          {
            "result": {
              "duration": 55800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.BeforedeletePlaceScenario()"
            }
          }
        ],
        "line": 15,
        "name": "Verify if Delete Place functionality is working",
        "description": "",
        "id": "validating-place-api-s;verify-if-delete-place-functionality-is-working",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2423600,
              "status": "passed"
            },
            "line": 16,
            "name": "DeletePlace Payload",
            "match": {
              "location": "stepDefinition.deleteplace_Payload()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2187935400,
              "status": "passed"
            },
            "line": 17,
            "name": "user calls \"deletePlaceAPI\" with \"Post\" http request",
            "match": {
              "arguments": [
                {
                  "val": "\"deletePlaceAPI\"",
                  "offset": 11
                },
                {
                  "val": "\"Post\"",
                  "offset": 33
                }
              ],
              "location": "stepDefinition.user_calls_with_http_request(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1227100,
              "status": "passed"
            },
            "line": 18,
            "name": "the API call is success with status code 200",
            "match": {
              "arguments": [
                {
                  "val": "200",
                  "offset": 41
                }
              ],
              "location": "stepDefinition.the_API_call_is_success_with_status_code(Integer)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11073100,
              "status": "passed"
            },
            "line": 19,
            "name": "\"status\" in response body is \"ok\"",
            "match": {
              "arguments": [
                {
                  "val": "\"status\"",
                  "offset": 0
                },
                {
                  "val": "\"ok\"",
                  "offset": 29
                }
              ],
              "location": "stepDefinition.in_response_body_is(String,String)"
            },
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@DeletePlace"
          }
        ]
      }
    ],
    "name": "Validating Place API\u0027s",
    "description": "",
    "id": "validating-place-api-s",
    "keyword": "Feature",
    "uri": "file:src/test/java/features/placeValidations.feature",
    "tags": []
  }
]